openapi: 3.0.0
info:
  title: 'APIBooks SMPlaces'
  version: '1.0.0'
paths:
  /getToken:
    post:
      tags:
        - "Authentication"
      summary: "Returns user token"
      description: ""
      operationId: "getToken"
      produces:
        - "application/json"
      parameters: []
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "object"
            additionalProperties:
              type: "integer"
              format: "int32"
  /updateToken:
    get:
      tags:
        - "Authentication"
      summary: "Update user token"
      description: ""
      operationId: "updateToken"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "orderId"
          in: "path"
          description: "ID of pet that needs to be fetched"
          required: true
          type: "integer"
          maximum: 10.0
          minimum: 1.0
          format: "int64"
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Order not found"
  /books:
    get:
      tags:
        - "Books"
      summary: "List books from user"
      description: ""
      operationId: "listBook"
      consumes:
        - "application/json"
        - "application/xml"
      produces:
        - "application/xml"
        - "application/json"
      parameters: []
      responses:
        "405":
          description: "Invalid input"
    post:
      tags:
        - "Books"
      summary: "Add book to user"
      description: ""
      operationId: "addBook"
      produces:
        - "application/xml"
        - "application/json"
      parameters: []
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid tag value"
  /books/{idBook}:
    put:
      tags:
        - "Books"
      summary: "Edit a book from user"
      description: ""
      operationId: "editBook"
      produces:
        - "application/xml"
        - "application/json"
      parameters: []
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid tag value"
    delete:
      tags:
        - "Books"
      summary: "Delete a book from list to the user"
      description: ""
      operationId: "deleteBook"
      produces:
        - "application/xml"
        - "application/json"
      parameters: []
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid tag value"
  /books/byInterest/{typeInterestId}:
    post:
      tags:
        - "Books"
      summary: "List books per interest"
      description: ""
      operationId: "byInterest"
      produces:
        - "application/xml"
        - "application/json"
      parameters: []
      responses:
        "200":
          description: "successful operation"
        "400":
          description: "Invalid status value"
